# hello-world

# As a data analyst, I used Hive SQL everyday and there are some useful functions that I found interesting.

# 1. sort_array(collect_set(sell_name)) returns a set of sell_name of each transaction_id

select class_cnt,week_tag, bkf_class_pattern, count(distinct transaction_guid) as tc_num
from(
select transaction_guid, 
week_tag,
count(distinct sell_name) as class_cnt,
sort_array(collect_set(sell_name))  as bkf_class_pattern
from tmp.ny_bigbkf_trans_detail_sellname
group by transaction_guid,week_tag
) a
group by class_cnt, bkf_class_pattern,week_tag

# sort_array(collect_list(sell_name)) will return a collection, but duplicated sellnames will not be removed.

# 2. sort updated_time by usercode
select usercode,point,row_number() over(partition by usercode order by updatetime_format desc) as r

# 3. time
# find the gap between "begin_date" and the most recent transaction of a customer.
# 3.1 cast date from a int like yyyymmdd to string "yyyy-mm-dd"
select usercode
        ,max(date_str) as recency
		,datediff(from_unixtime(unix_timestamp('${begin_date}','yyyymmdd'),'yyyy-mm-dd'),max(date_str)) as rec_gap
from tmp.ny_alltrans_breakdown

there are two ways:
1. select from_unixtime(unix_timestamp(cast(a.fst_redeem_date as string),'yyyymmdd'),'yyyy-mm-dd') or 
2. concat(substr(fst_redeem_date,1,4),'-',substr(fst_redeem_date,5,2),'-',substr(fst_redeem_date,7,2))


concat(substr(fst_redeem_date,1,4),'-',substr(fst_redeem_date,5,2),'-',substr(fst_redeem_date,7,2))

# 3.2 cast date from string "yyyy-mm-dd" to int yyyymmdd
select cast(from_unixtime(unix_timestamp('${begin_date}','yyyy-mm-dd'),'yyyymmdd') as int)

# 4. trans interval
# find the interval between 1st/2nd/3rd transaction per customer

select r, avg(interval) from (
	select a.r, a.member_code, datediff(b.bizdate, a.bizdate) as interval
	from tmp.ny_tb_trans_rank a join tmp.ny_tb_trans_rank b on a.member_code=b.member_code and a.r=b.r-1 
) a
group by r
